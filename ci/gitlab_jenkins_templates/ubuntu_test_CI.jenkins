#!/usr/bin/env groovy

docker_registry_server = ImageTag.split(':')[0..1].join(':')
currentBuild.displayName = ImageTag.split(':')[2] + "-${arch}"
currentBuild.description = sourceBranch + ": " + commitHash

podTemplate(
cloud:'sc-ipp-blossom-prod',
yaml:"""
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: docker
    image: ${imageTag}
    command:
    - cat
    resources: 
        requests:
          nvidia.com/gpu: 1
        limits:
          nvidia.com/gpu: 1
    tty: true
  nodeSelector:
    kubernetes.io/os: linux
    nvidia.com/gpu_type: ${arch}
""") {
  node(POD_LABEL) {
    container("docker") {
      timeout(time: 25, unit: 'MINUTES') {
        gitlabCommitStatus("test-${configName}-${arch}") {
          stage("Install deps") {
            sh 'pip install -r /kaolin/tools/ci_requirements.txt'
          }
          testMap = [
            "Disp info": {
              stage('Disp info') {
                sh 'nvidia-smi'
                sh 'python --version'
              }
            }, "Pytest": {
              stage("Pytest") {
                sh 'pytest -s --cov=/kaolin/kaolin /kaolin/tests/python/kaolin'
              }
            }, "Doc examples": {
              if (arch == "TITAN_RTX") {
                stage("Doc examples") {
                  sh 'pytest --doctest-modules --ignore=/kaolin/kaolin/experimental /kaolin/kaolin'
                }
              }
            }, "DIB-R Tutorial": {
              stage("DIB-R Tutorial") {
                sh 'apt update && apt install -y unzip && unzip /kaolin/examples/samples/rendered_clock.zip -d /kaolin/examples/samples/'
                sh 'cd /kaolin/examples/tutorial && ipython dibr_tutorial.ipynb'
              }
            }, "DMTet Tutorial": {
              stage("DMTet Tutorial") {
                sh 'cd /kaolin/examples/tutorial && ipython dmtet_tutorial.ipynb'
              }
            }, "Understanding SPCs Tutorial": {
              stage("Understanding SPCs Tutorial") {
                sh 'cd /kaolin/examples/tutorial && ipython understanding_spcs_tutorial.ipynb'
              }
            }
          ]
          parallel testMap
        }
      }
    }
  }
}
